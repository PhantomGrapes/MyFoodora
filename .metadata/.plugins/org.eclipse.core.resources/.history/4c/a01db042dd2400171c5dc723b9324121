/**
 * 
 */
package command;

import item.Order;
import myFoodora.MyFoodora;
import ui.UICore;
import user.Customer;
import user.Restaurant;

/**
 * @author Dingo
 * for the currently logged on restaurant to allocate an 
 * order to a deliverer by application of the current delivery policy
 */
public class FindDelivererCommand implements Command {

	String orderName;
	MyFoodora myFoodora;
	
	@Override
	public CommandResult execute() throws Exception {
		if (!(UICore.getCurrentUser() instanceof Restaurant))
			return fail("You haven't right to use this command.");
		Customer currentUser = (Customer) UICore.getCurrentUser();
		Order o = null;
		for (Order order : UICore.getCurrentOrders()) {
			if(order.getName()==orderName)
				o = order;
		}
		if(o==null)
			return fail("Order doesn't exist.");
		o.setDate(date);
		currentUser.setCurrentOrder(o);
		currentUser.calculateFinalPrice();
		myFoodora.allocateCourier(o);
		currentUser.finishOrder();
		return success("Your order has finshed successfully.");
	}

	@Override
	public CommandResult success(String message) {
		CommandResult result = new CommandResult();
		result.setMessage(message);
		result.setResult(true);
		return result;
	}

	@Override
	public CommandResult fail(String message) {
		CommandResult result = new CommandResult();
		result.setMessage(message);
		result.setResult(false);
		return result;
	}

}
